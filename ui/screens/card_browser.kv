<CardBrowser>:
    name: 'card_browser'
    FloatLayout:
        ActionBar:
            background_color: 0,.6,1,1
            id: ac
            pos_hint: {'top':1}
            ActionView:
                id: av
                use_separator: True
                ActionPrevious:
                    with_previous: False
                    size_hint_x: None
                    width: self.height
                    on_release: smsm.toggle_state()
                ActionLabel:
                    id: aclabel
                    text: 'Card Browser'
                    text_size: self.width  , None
                ActionButton:
                    size_hint_x: None
                    width: 100
        SlideMenu
            id: smsm
            size_hint_y: None
            height: root.height - ac.height
            anim_type: 'slide_above_anim'
            BoxLayout:
                orientation: 'vertical'
                spacing: '1dp'
                Button:
                    text: 'Decks'
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    on_release: if smsm._anim_progress >=1 : print 'decks pressed'
                    color:[0,0,0,.8]
                    background_normal: ''
                    background_color: 1,1,1,1
                Button:
                    text: 'Card Browser'
                    color:[0,0,0,.8]
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    #on_release: if smsm._anim_progress >=1 : print 'card browser pressed'
                    background_normal: ''
                    background_color: 1,1,1,1
                Button:
                    text: 'Statistics'
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    on_release: if smsm._anim_progress >=1 : print 'statistics pressed'
                    color:[0,0,0,.8]
                    background_normal: ''
                    background_color: 1,1,1,1
                Button:
                    text: 'Settings'
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    on_release: if smsm._anim_progress >=1 : print 'settings pressed'
                    color:[0,0,0,.8]
                    background_normal: ''
                    background_color: 1,1,1,1
                Button:
                    text: 'Help'
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    on_release: if smsm._anim_progress >=1 : print 'halp pressed'
                    color:[0,0,0,.8]
                    background_normal: ''
                    background_color: 1,1,1,1
                Button:
                    text: 'Send feedback'
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    on_release: if smsm._anim_progress >=1 : print 'send feedback pressed'
                    color:[0,0,0,.8]
                    background_normal: ''
                    background_color: 1,1,1,1
                Widget:
                    size_hint: 1,2.5
                    canvas:
                        Color:
                            rgba: 1,1,1,1
                        Rectangle:
                            pos: self.pos
                            size: self.size
            ScrollView:
                FloatLayout:
                    id: dad
                    size_hint_y: None
                    height: root.height - ac.height
                    BoxLayout
                        id: bl1
                        size_hint_y: None
                        y: bl.height + bl.y
                        height: ti.minimum_height
                        Widget:
                            size_hint_x: 0.1
                        PressTextInput:
                            id: ti
                            multiline: False
                            my_button: search
                        Button:
                            id: search
                            text: 'Search'
                            on_state: if self.state is 'down': root.manager.cb_display_cards('search',root.manager.mainbutton,ti.text)
                    BoxLayout:
                        id: bl
                        size_hint_y: None
                        height: '50dp'
                        y: fl10.height
                        Label:
                            text: "Question"
                            #markup: True
                        Label
                            text: 'Answer'
                    FloatLayout:
                        id: fl10
                        size_hint_y: None
                        height: root.height - ac.height - bl.height - ti.height
                        ScrollView
                            GridLayout:
                                orientation: 'vertical'
                                id: gl
                                size_hint_y: None
                                size: self.minimum_size
                                cols: 2
